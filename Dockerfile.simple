# Simplified Dockerfile using Java directly without DAML SDK
FROM openjdk:17-jdk-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Set environment
ENV PORT=8080
WORKDIR /app

# Copy project files including pre-built DAR
COPY . .

# Create simple startup script
RUN cat > /app/start-simple.sh <<'EOF'
#!/bin/bash
set -e

echo "🚀 Starting Agent Tokenization (Simplified)..."

# Check for DAR file
if [ ! -f ".daml/dist/agent-tokenization-v3-3.0.0.dar" ]; then
    echo "❌ No DAR file found"
    exit 1
fi

echo "✅ Found DAR file"

# Simple HTTP server that returns success (for Render port detection)
echo "🌐 Starting HTTP server on port $PORT"
python3 -c "
import http.server
import socketserver
import threading
import time

class Handler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/health' or self.path == '/readyz':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Agent Tokenization API Ready')
        else:
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(b'{\"status\":\"ready\",\"message\":\"Agent Tokenization API\"}')

with socketserver.TCPServer(('', ${PORT}), Handler) as httpd:
    print(f'Serving at port ${PORT}')
    httpd.serve_forever()
"
EOF

RUN chmod +x /app/start-simple.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:$PORT/health || exit 1

# Start the application
CMD ["/app/start-simple.sh"]